{"version":3,"sources":["index.js"],"names":["Square","props","squareClass","winningSquare","className","id","onClick","value","Board","i","this","squares","winningSquares","includes","x","j","gameRows","max","row","push","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","winner","Game","state","history","Array","fill","col","stepNumber","xIsNext","sortOrder","handleSort","bind","event","setState","target","slice","current","Math","floor","concat","step","status","confetti","winningCalculation","moves","map","move","desc","listClass","jumpTo","reverse","console","log","handleClick","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63aa758b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Confetti from 'react-confetti';\r\n\r\nfunction Square(props) {\r\n\tlet squareClass = 'square';\r\n\tif(props.winningSquare) {\r\n\t\tsquareClass+=' winner';\r\n\t\t}\r\n    return (\r\n      <button className={squareClass} id={props.id} onClick={props.onClick} >\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\t\r\n  renderSquare(i) {\r\n  return (\r\n\t\t<Square \r\n\t\t\tkey= {i}\r\n\t\t\tvalue={this.props.squares[i]} \r\n\t\t\tonClick={() => this.props.onClick(i)}\r\n\t\t\twinningSquare={this.props.winningSquares.includes(i)}\r\n\t\t/>\r\n\t\t);\r\n  }\r\n\r\n  render() {\r\n\t  let gameRows =[];\r\n\t  let x, j, max = 0;\r\n\t  for(x=0; x<3; x++){\r\n\t\t  let row = [];\t\t\r\n\t\t  for(j=0; j<3; j++){\r\n\t\t\t  row.push(this.renderSquare(max));\r\n\t\t\t  max++;\r\n\t\t  }\r\n\t\tgameRows.push(<div className=\"board-row\" key={x+1}>{row}</div>);\r\n\t  }\r\n\t  \r\n  \r\n    return (\r\n\t\r\n      <div className=\"squaresHolder\">\r\n\t  {gameRows}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {winningSquares: lines[i], winner: squares[a], };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thistory: [{squares: Array(9).fill(null),\r\n\t\t\trow: 0,\r\n\t\t\tcol: 0,\r\n\t\t\twinner: '',\r\n\t\t\t}],\r\n\t\t\tstepNumber: 0,\r\n\t\t\txIsNext: true,\r\n\t\t\tsortOrder: \"Asc\",\r\n\t\t};\r\n\t\t\r\n\t\tthis.handleSort = this.handleSort.bind(this);\r\n\t}\r\n\t\r\n\thandleSort(event){\r\n\t\tthis.setState({sortOrder: event.target.value});\r\n\t}\r\n\t\r\n\thandleClick(i){\r\n\t\tconst history = this.state.history.slice(0,this.state.stepNumber+1);\r\n\t\tconst current = history[history.length-1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\t\r\n\t\tif(calculateWinner(current.squares) || squares[i]){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tsquares[i]= this.state.xIsNext ? 'X' : 'O';\t\t\r\n\t\tlet row = Math.floor(i/3)+1;\r\n\t\tlet col = (i+1)%3;\r\n\t\tif(col===0) {\r\n\t\t\tcol = 3;\t\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\t\t\t\thistory: history.concat([{squares: squares, col: col, row: row}]),\r\n\t\t\t\t\t\txIsNext: !this.state.xIsNext,\r\n\t\t\t\t\t\tstepNumber: history.length,\r\n\t\t\t\t\t});\r\n\t}\r\n\t\r\n\tjumpTo(step){\r\n\t\tconst current = this.state.history.slice(0, step+1);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\thistory: current,\r\n\t\t\tstepNumber: step,\r\n\t\t\txIsNext: (step%2) === 0,\r\n\t\t});\r\n\t}\r\n\t\r\n  render() {\r\n\tconst history = this.state.history.slice();\r\n\tconst current = history[this.state.stepNumber];\r\n\tconst winningCalculation  = calculateWinner(current.squares);\r\n\tconst winningSquares = winningCalculation ? winningCalculation.winningSquares : [];\r\n\tlet moves = history.map((step, move) => {\r\n\t\tconst desc = move ? 'Go to move #' + move + '\\n(row: ' + step.row + ', col: ' + step.col +')' : 'Go to game start';\r\n\t\tlet listClass = \"list-group-item\"\r\n\t\tlistClass+= move===history.length-1 ? ' active' : '';\r\n\t\treturn (<li className={listClass} key={move}>\r\n\t\t\t\t\t<button className=\"btn\"  key={move+'-'+step.row+'-'+step.col} onClick={() => this.jumpTo(move)} >{desc}</button>\r\n\t\t\t\t</li>)\r\n\t});\r\n\t\r\n\tmoves = (this.state.sortOrder===\"Asc\" ? moves : moves.reverse());\r\n\t\r\n\tconsole.log();\r\n\t\r\n\tlet status;\r\n\tlet confetti;\r\n\tif(winningCalculation){\r\n\t\tstatus = 'Winner: ' + winningCalculation.winner;\r\n\t\tconfetti = <Confetti/>\r\n\t} else if (!current.squares.includes(null)){\r\n\t\tstatus = 'The game has ended in a draw.';\r\n\t} else {\r\n\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\t}\r\n\r\n    return (\r\n      <div className=\"game\">\r\n\t\t  {confetti}\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares} winningSquares={winningSquares} onClick={(i) => this.handleClick(i)}/>\r\n        </div>\r\n        <div className=\"game-info h5\">\r\n          <div>{status}</div>\r\n\t\t  <div className=\"game-history\">Game History: \r\n\t\t\t  <select className=\"form-select\" value={this.state.sortOrder} onChange={this.handleSort}>\r\n\t\t\t\t<option value=\"Asc\">Ascending</option>\r\n\t\t\t\t<option value=\"Desc\">Descending</option>\r\n\t\t\t  </select>\r\n\t\t  </div>\r\n          <ol className=\"list-group\">{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}